### MAPS AND SUMS ###

nil = {} \n {} -> Nil {};
# elem_1 = {nil} \n {} -> Cons {4# nil};
# elem_2 = {elem_1} \n {} -> Cons {10# elem_1};
# elem_3 = {elem_2} \n {} -> Cons {16# elem_2};

list3 = {} \n {x y z} ->
    let {tz = {nil z} \n {} -> Cons {z nil}}
    in let {ty = {tz y} \n {} -> Cons {y tz}}
    in let {tx = {ty x} \n {} -> Cons {x ty}}
    in tx {};

elem_3 = {} \n {} -> list3 {16# 10# 4#};

inc = {} \n {x i} -> case + {x i} of {v -> v {}};

map = {} \n {f xs} -> case xs {} of {
    Nil {} -> Nil {};
    Cons {y ys} -> let {
        fy = {f y} \n {} -> f {y};
        mfy = {f ys} \n {} -> map {f ys}
    } in Cons {fy mfy}
};

sum = {} \n {xs} -> case xs {} of {
    Nil {} -> 0#;
    Cons {y ys} -> case y {} of {
        v -> case sum {ys} of {
            sy -> + {v sy}
        }
    }
};

# main = {} \n {} -> map {inc elem_3};
# main = {} \n {} -> sum {elem_3};

inc3 = {} \n {ys} -> inc {ys 4#};
incd = {} \u {} -> map {inc3 elem_3};
# main = {} \n {} -> sum {incd};
main = {} \u {} -> case sum {incd} of {x -> MkInt {x}};
